generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Domain {
  id           String       @id @default(uuid())
  domainName   String       @unique
  name         String
  phone        String
  cep          String
  address      String
  cnpj         String?
  deliveryTime String
  deliveryCost Float        @default(0)
  Categories   Category[]
  Options      Option[]
  Products     Product[]
  Schedules    Schedule?
  Subsections  Subsection[]
  User         User[]

  @@map("domains")
}

model User {
  id            String  @id @default(uuid())
  email         String  @unique
  password_hash String
  role          Role    @default(ADMIN)
  domainId      String?
  Domain        Domain? @relation(fields: [domainId], references: [id], onDelete: Cascade)

  @@map("users")
}

model Category {
  id       String    @id @default(uuid())
  name     String
  domainId String
  Domain   Domain    @relation(fields: [domainId], references: [id], onDelete: Cascade)
  Products Product[]

  @@map("categories")
}

model Product {
  id          String       @id @default(uuid())
  img         String
  name        String
  price       Float
  description String
  domainId    String
  categoryId  String
  Category    Category     @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  Domain      Domain       @relation(fields: [domainId], references: [id], onDelete: Cascade)
  Subsections Subsection[]

  @@map("products")
}

model Subsection {
  id             String   @id @default(uuid())
  name           String
  multipleChoice Boolean
  limit          Int
  required       Boolean
  domainId       String
  ProductId      String
  Options        Option[]
  Product        Product  @relation(fields: [ProductId], references: [id], onDelete: Cascade)
  Domain         Domain   @relation(fields: [domainId], references: [id], onDelete: Cascade)

  @@map("subsections")
}

model Option {
  id           String     @id @default(uuid())
  name         String
  description  String?
  price        Float
  domainId     String
  SubsectionId String
  Subsection   Subsection @relation(fields: [SubsectionId], references: [id], onDelete: Cascade)
  Domain       Domain     @relation(fields: [domainId], references: [id], onDelete: Cascade)

  @@map("options")
}

model Schedule {
  id       String @id @default(uuid())
  seg      Json
  ter      Json
  qua      Json
  qui      Json
  sex      Json
  sab      Json
  dom      Json
  domainId String @unique
  Domain   Domain @relation(fields: [domainId], references: [id], onDelete: Cascade)

  @@map("schedules")
}

enum Role {
  OWNER
  ADMIN
}
